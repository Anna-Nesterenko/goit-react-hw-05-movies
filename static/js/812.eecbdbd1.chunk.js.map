{"version":3,"file":"static/js/812.eecbdbd1.chunk.js","mappings":"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","sources":["hooks/useFetchMovies.js","hooks/useFetchMovieById.js","hooks/useFetchMovieByCast.js","pages/Cast.jsx","pages/Home.jsx","pages/Movies.jsx","pages/MoviesDetailsPage.jsx","services/services.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/services';\n\nexport const useFetchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return { movies, loading, error };\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieDetailsById } from 'services/services';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMoviesById = () => {\n  const { movieId } = useParams();\n\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMoviesById = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieDetailsById(movieId);\n\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n        //   toast.error(`Not Found`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesById();\n  }, [movieId]);\n  return { movies, loading, error, movieId };\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieByCast } from 'services/services';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovieByCast = () => {\n  const { movieId } = useParams();\n\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieByCast = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieByCast(movieId);\n\n        setCasts(data.cast);\n      } catch (error) {\n        setError(error);\n        //   toast.error(`Not Found`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieByCast();\n  }, [movieId]);\n  return { casts, loading, error };\n};\n","import { useFetchMovieByCast } from 'hooks';\nimport { Loader } from 'components';\nimport { CastList } from 'components';\n\nexport const Cast = () => {\n  const { casts, loading, error } = useFetchMovieByCast();\n  //   console.log('first', casts);\n  return (\n    <main>\n      {!error && (\n        <section>\n          {loading && <Loader />}\n          {casts.length !== 0 ? (\n            <CastList casts={casts} />\n          ) : (\n            <p>No information</p>\n          )}\n        </section>\n      )}\n    </main>\n  );\n};\n","import { Loader } from 'components';\nimport { useFetchMovies } from 'hooks';\nimport { Link } from 'react-router-dom';\n\nexport const Home = () => {\n  const { movies, loading, error } = useFetchMovies();\n\n  return (\n    <main>\n      {loading && <Loader />}\n\n      {!error && (\n        <ul>\n          {movies.map(el => (\n            <li key={el.id}>\n              <Link to={`/movies/${el.id}`}>{el.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n","import { SearchForm } from 'components';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { getSearchMovies } from 'services/services';\nimport { Loader } from 'components';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  useEffect(() => {\n    if (searchQuery) {\n      const fetchByQuery = async () => {\n        setLoading(true);\n        try {\n          const data = await getSearchMovies(searchQuery);\n          //  console.log('data', data);\n          setMovies(data.results);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchByQuery();\n    }\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchName = e.target.elements.searchQuery.value;\n    //  console.log('searchQuery :>> ', searchQuery);\n    setSearchParams({\n      searchQuery: searchName,\n    });\n    //  console.log('.value :>> ', searchName);\n    if (searchName === '') {\n      toast.warning('Sorry, your field is empty. Enter search name');\n      return;\n    }\n  };\n\n  return (\n    <>\n      <SearchForm onSubmitForm={handleSubmit} />\n      {loading && <Loader />}\n      <ul>\n        {movies.map(el => (\n          <li key={el.id}>\n            <Link to={`/movies/${el.id}`}>{el.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { Link, Outlet } from 'react-router-dom';\nimport { MovieCard } from 'components';\nimport { Loader } from 'components';\nimport { TiArrowLeftOutline } from 'react-icons/ti';\nimport { useFetchMoviesById } from 'hooks';\n\nexport const MoviesDetailsPage = () => {\n  const { movies, error, loading, movieId } = useFetchMoviesById();\n\n  //   console.log('movieId :>> ', movieId);\n  return (\n    <main>\n      <section>\n        {loading && <Loader />}\n        <Link to=\"/\">\n          <TiArrowLeftOutline /> Back to the Previous page\n        </Link>\n        {!error && movies && <MovieCard movie={movies} />}\n      </section>\n      <section>\n        <ul>\n          Additional Information\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </section>\n      <Outlet />\n    </main>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '833791a5e754a1f0443be5fc62646bdb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["useFetchMovies","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getTrendingMovies","data","results","useFetchMoviesById","movieId","useParams","fetchMoviesById","getMovieDetailsById","useFetchMovieByCast","casts","setCasts","fetchMovieByCast","getMovieByCast","cast","Cast","length","Home","map","el","to","id","title","Movies","useSearchParams","searchParams","setSearchParams","searchQuery","get","fetchByQuery","getSearchMovies","console","log","onSubmitForm","e","preventDefault","searchName","target","elements","value","toast","MoviesDetailsPage","movie","API_KEY","axios","getMovieByReviews"],"sourceRoot":""}