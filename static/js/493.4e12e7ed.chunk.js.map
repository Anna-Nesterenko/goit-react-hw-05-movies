{"version":3,"file":"static/js/493.4e12e7ed.chunk.js","mappings":"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","sources":["hooks/useFetchMovies.js","hooks/useFetchMovieById.js","hooks/useFetchMovieByCast.js","pages/Cast.jsx","services/services.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/services';\n\nexport const useFetchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return { movies, loading, error };\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieDetailsById } from 'services/services';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMoviesById = () => {\n  const { movieId } = useParams();\n\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMoviesById = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieDetailsById(movieId);\n\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n        //   toast.error(`Not Found`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesById();\n  }, [movieId]);\n  return { movies, loading, error, movieId };\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieByCast } from 'services/services';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovieByCast = () => {\n  const { movieId } = useParams();\n\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieByCast = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieByCast(movieId);\n\n        setCasts(data.cast);\n      } catch (error) {\n        setError(error);\n        //   toast.error(`Not Found`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieByCast();\n  }, [movieId]);\n  return { casts, loading, error };\n};\n","import { useFetchMovieByCast } from 'hooks';\nimport { Loader } from 'components';\nimport { CastList } from 'components';\n\nexport const Cast = () => {\n  const { casts, loading, error } = useFetchMovieByCast();\n  //   console.log('first', casts);\n  return (\n    <main>\n      {!error && (\n        <section>\n          {loading && <Loader />}\n          {casts.length !== 0 ? (\n            <CastList casts={casts} />\n          ) : (\n            <p>No information</p>\n          )}\n        </section>\n      )}\n    </main>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '833791a5e754a1f0443be5fc62646bdb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["useFetchMovies","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getTrendingMovies","data","results","useFetchMoviesById","movieId","useParams","fetchMoviesById","getMovieDetailsById","useFetchMovieByCast","casts","setCasts","fetchMovieByCast","getMovieByCast","cast","Cast","length","API_KEY","axios","getSearchMovies","searchQuery","id","getMovieByReviews"],"sourceRoot":""}