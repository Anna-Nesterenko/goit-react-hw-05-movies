{"version":3,"file":"static/js/651.76716908.chunk.js","mappings":"uRASO,SAASA,IACd,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,gBAErCC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAa,CACf,IAAMG,EAAY,mCAAG,2FACnBP,GAAW,GADQ,mBAGEQ,EAAAA,EAAAA,IAAgBJ,GAHlB,OAGXK,EAHW,OAKjBX,EAAUW,EAAKC,SALE,gDAOjBC,QAAQC,IAAR,MAPiB,yBASjBZ,GAAW,GATM,4EAAH,qDAYlBO,GACD,CACF,GAAE,CAACH,IAgBJ,OACE,iCACE,SAAC,KAAD,CAAYS,aAhBK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAOC,SAASd,YAAYe,MAEjDhB,EAAgB,CACdC,YAAaY,IAGI,KAAfA,GACFI,EAAAA,GAAAA,QAAc,gDAGjB,IAKIrB,IAAW,SAAC,KAAD,KACZ,wBACGF,EAAOwB,KAAI,SAAAC,GAAE,OACZ,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGE,IAAxB,SAA+BF,EAAGG,SAD3BH,EAAGE,GADA,QAQrB,C,4MC1DKE,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,sGACRD,IAAAA,IAAA,qCAAwCD,IADhC,uBACvBjB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBD,EAAe,mCAAG,WAAMJ,GAAN,yFACNuB,IAAAA,IAAA,+BACGD,EADH,kBACoBtB,EADpB,yBADM,uBACrBK,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfoB,EAAmB,mCAAG,WAAML,GAAN,yFACVG,IAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCE,IADvB,uBACzBjB,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBqB,EAAc,mCAAG,WAAMN,GAAN,yFACLG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCE,IADpC,uBACpBjB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdsB,EAAiB,mCAAG,WAAMP,GAAN,yFACRG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCE,IADjC,uBACvBjB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["pages/Movies.jsx","services/services.js"],"sourcesContent":["import { SearchForm } from 'components';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { getSearchMovies } from 'services/services';\nimport { Loader } from 'components';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  useEffect(() => {\n    if (searchQuery) {\n      const fetchByQuery = async () => {\n        setLoading(true);\n        try {\n          const data = await getSearchMovies(searchQuery);\n          //  console.log('data', data);\n          setMovies(data.results);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchByQuery();\n    }\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchName = e.target.elements.searchQuery.value;\n    //  console.log('searchQuery :>> ', searchQuery);\n    setSearchParams({\n      searchQuery: searchName,\n    });\n    //  console.log('.value :>> ', searchName);\n    if (searchName === '') {\n      toast.warning('Sorry, your field is empty. Enter search name');\n      return;\n    }\n  };\n\n  return (\n    <>\n      <SearchForm onSubmitForm={handleSubmit} />\n      {loading && <Loader />}\n      <ul>\n        {movies.map(el => (\n          <li key={el.id}>\n            <Link to={`/movies/${el.id}`}>{el.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '833791a5e754a1f0443be5fc62646bdb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieByReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["Movies","useState","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchByQuery","getSearchMovies","data","results","console","log","onSubmitForm","e","preventDefault","searchName","target","elements","value","toast","map","el","to","id","title","API_KEY","axios","getTrendingMovies","getMovieDetailsById","getMovieByCast","getMovieByReviews"],"sourceRoot":""}